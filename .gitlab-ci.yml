image: registry.gitlab.com/passbolt/passbolt-ci-docker-images/android-app-alpine:latest

variables:
  ANDROID_HOME: "/usr/local/android-sdk"

default:
  retry:
    max: 2
    when:
      - runner_system_failure
      - stuck_or_timeout_failure
      - api_failure
      - stale_schedule

stages:
  - Build
  - Instrumented tests
  - Deploy

# run all static analysis and reporting tools
Run verifications:
  stage: Build
  script:
    - >
      ./gradlew --no-daemon --build-cache 
      detekt 
      ktlint 
      unitTest
      lintRelease 
      licenseeRelease 
      dependencyUpdates
  #     TODO uncomment when support added ready, currently it causes error
  #     The Dependency Analysis plugin is only known to work with versions of AGP between 8.0.0 and 8.4.0-alpha01. You are using 8.5.0.
  #     buildHealth
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: always
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: always
  artifacts:
    when: always
    expire_in: 72 hrs
    paths:
      - "**/reports/ktlint-report.xml"
      - "**/reports/detekt-report.xml"
      - "**/test-results/**/TEST-*.xml"
      - "**/lint-results-*.html"
      - build/dependencyUpdates/dependecyUpdates.txt
      - build/reports/build-health-report.txt
    reports:
      junit: "**/test-results/**/TEST-*.xml"

# build and upload QA application to Firebase App Distribution
Deploy qa application to Firebase:
  stage: Deploy
  variables:
    GITLAB_BUILD_NUMBER: $CI_PIPELINE_IID
  script:
    - echo $QA_KEY | base64 -d > "${HOME}/qa.keystore"
    - export FIREBASE_DIR="$HOME/.config/firebase"
    - install -d $FIREBASE_DIR
    - echo ${FIREBASE_SERVICE_KEY} | base64 -d > "$FIREBASE_DIR/service_key.json"
    - >
      ./gradlew --no-daemon --build-cache -PserviceKey="$FIREBASE_DIR/service_key.json"
      -Pandroid.injected.signing.store.file="${HOME}/qa.keystore"
      -Pandroid.injected.signing.store.password=$QA_KEYSTORE_PASSWORD
      -Pandroid.injected.signing.key.alias=$QA_KEY_ALIAS
      -Pandroid.injected.signing.key.password=$QA_KEY_PASSWORD
      assembleQa appDistributionUploadQa
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_BRANCH =~ /^release/
  artifacts:
    expire_in: 72 hrs
    paths:
      - "**/build/outputs/apk/**/*.apk"

# build and upload production application to Google Play Store
Deploy production application to Play Store:
  stage: Deploy
  script:
    - echo $PROD_KEYSTORE | base64 -d > "${HOME}/production.keystore"
    - >
      ./gradlew --no-daemon
      -Pandroid.injected.signing.store.file="${HOME}/production.keystore"
      -Pandroid.injected.signing.store.password=$PROD_KEYSTORE_PASSWORD
      -Pandroid.injected.signing.key.alias=$PROD_KEY_ALIAS
      -Pandroid.injected.signing.key.password=$PROD_KEY_PASSWORD
      clean bundleRelease publishReleaseBundle
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
  artifacts:
    expire_in: 72 hrs
    paths:
      - "**/build/outputs/bundle/release/*.aab"
